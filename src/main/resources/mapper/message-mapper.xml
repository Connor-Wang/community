<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wcaaotr.community.dao.MessageMapper">
    <insert id="insertMessage">
        insert into community.message (from_id, to_id, conversation_id, content, status, create_time)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update community.message
        set status=#{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectConversations" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from community.message
        where id in(
            select max(id)
            from community.message
            where status != 2
              and from_id != 1
              and (from_id=#{userId} or (to_id=#{userId}))
            group by conversation_id
            )
        order by id desc
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid)
        from (
            select max(id) as maxid
            from community.message
            where status != 2
              and from_id != 1
              and (from_id=#{userId} or (to_id=#{userId}))
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.wcaaotr.community.entity.Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from community.message
        where status != 2
            and from_id != 1
            and conversation_id=#{conversationId}
        order by id desc
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from community.message
        where status != 2
          and from_id != 1
          and conversation_id=#{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from community.message
        where status = 0
          and from_id != 1
          and to_id = #{userId}
          <if test="conversationId != null">
              and conversation_id=#{conversationId}
          </if>
    </select>


</mapper>